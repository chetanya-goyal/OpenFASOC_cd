name: Continuous Deployment Workflow

on:
  push:
    branches:
      - master
      - development
      - staging
      - feature/**
      - hotfix/**
  pull_request:
    branches:
      - development
      - staging

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/')
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        env:
              IMAGE_NAME: msaligane/openfasoc:alpha
        run: |
          cd docker/conda
          docker build -t $IMAGE_NAME .
      - name: Run Tests
        run:  test_generators:
        needs: build_docker_image
        runs-on: ubuntu-latest
        strategy:
          matrix:
            platform: [sky130hd, sky130hs, sky130hvl]
        steps:
          - name: Checkout repo
            uses: actions/checkout@v2
    
          - name: Test Generators
            run: |
              cd $GITHUB_WORKSPACE
              touch file.log
              docker run --rm \
                -v $PWD:$PWD\
                -w $PWD\
                $IMAGE_NAME\
                bash -c "\
                  pip3 install -r requirements.txt &&\
                  cd ./openfasoc/generators/temp-sense-gen &&\
                  make sky130hd_temp\
                " && exit_code=$? | tee -a file.log
                if [ $? -ne 0 ]; then exit 1; fi
                if grep "\[ERROR\]" file.log; then exit 1; else exit 0; fi

  deploy_to_staging:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Staging
        run: echo "Deploying to staging server"

  production_deploy:
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Production
        run: echo "Deploying to production server"
